const nt="ENTRIES",T="KEYS",V="VALUES",F="";class D{constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case V:return this.value();case T:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const a=o[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let l=0;l<c.length;++l,++a){const p=c[l],f=i*a,g=f-i;let d=o[f];const m=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<d&&(d=L)}if(d>s)continue t}W(e.get(c),t,s,n,o,a,i,r+c)}};class C{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=I(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=O(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=O(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,T)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,V)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},O=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return O(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=I(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=I(e);n.set(o+t,s),n.delete(o)},I=e=>e[e.length-1],it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",P="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},q=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,lt=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),q(n.terms,u)}}return e},[P]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);q(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},dt=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},ft={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},H={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:ft},mt={combineWith:P,prefix:(e,t,s)=>t===s.length-1},pt={batchSize:1e3,batchWait:10},J={minDirtFactor:.1,minDirtCount:20},Ft={...pt,...J};class _t{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...H,...t.searchOptions||{}},autoSuggestOptions:{...mt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=J,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const yt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},U=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},At=(e,t,s,n)=>{if(!e._index.has(n)){U(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?U(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(ht[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const a=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const d of p.keys()){if(!e._documentIds.has(d)){At(e,l,d,s),f-=1;continue}const m=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!m)continue;const y=p.get(d),_=e._fieldLength.get(d)[l],b=at(y,f,e._documentCount,_,g,r),z=n*a*m*b,A=h.get(d);if(A){A.score+=z,ct(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(d,{score:z,terms:[t],match:{[s]:[c]}})}}return h},Ct=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((d,m)=>({...d,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...H.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,m=d<1?Math.min(r,Math.round(t.term.length*d)):d;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[d,m]of f){const y=d.length-t.term.length;if(!y)continue;g==null||g.delete(d);const _=a*d.length/(d.length+.3*y);B(e,t.term,d,_,m,o,u,h,p)}if(g)for(const d of g.keys()){const[m,y]=g.get(d);if(!y)continue;const _=c*d.length/(d.length+y);B(e,t.term,d,_,m,o,u,h,p)}return p},K=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(p=>K(e,p,a));return Y(l,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(dt(i)).map(a=>Ct(e,a,i));return Y(c,i.combineWith)},X=(e,t,s={})=>{const n=K(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Et=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of X(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o},zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new _t(a);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const d of Object.keys(f)){let m=f[d];c===1&&(m=m.ds),g.set(parseInt(d,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:a?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return X(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[a,l]=u.split(/[#@]/),{contents:p}=n[a]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:a,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:a,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const d=i.map(m=>j(g,m)).filter(m=>m!==null);d.length&&p.push([{type:"text",key:a,...c&&{anchor:l},display:d},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=yt(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Et(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":39,\"nextId\":39,\"documentIds\":{\"0\":\"v-f903c6ac\",\"1\":\"v-f903c6ac#一、springboot-是什么\",\"2\":\"v-f903c6ac#二、为何会出现-springboot\",\"3\":\"v-f903c6ac#三、springboot-的开箱即用体现在那里\",\"4\":\"v-016b8834\",\"5\":\"v-016b8834#_1-什么是微服务\",\"6\":\"v-016b8834#_2-微服务需要解决的问题\",\"7\":\"v-016b8834#_3-微服务架构的相关概念\",\"8\":\"v-016b8834#_3-1-服务治理\",\"9\":\"v-016b8834#_3-2-服务调用\",\"10\":\"v-016b8834#_3-3-服务网关\",\"11\":\"v-016b8834#_3-4-服务容错\",\"12\":\"v-016b8834#_3-5-链路追踪\",\"13\":\"v-016b8834#_4-springcloud\",\"14\":\"v-016b8834#_5-springcloud-alibaba\",\"15\":\"v-e2fb665a\",\"16\":\"v-e2fb665a#一、滚动条的组成\",\"17\":\"v-e2fb665a#二、css-伪类\",\"18\":\"v-e2fb665a#三、修改\",\"19\":\"v-2bf70440\",\"20\":\"v-2bf70440#一、后端返回下载地址\",\"21\":\"v-2bf70440#_1-1-location-herf\",\"22\":\"v-2bf70440#_1-2-动态添加-a-标签\",\"23\":\"v-2bf70440#_1-3-window-open\",\"24\":\"v-2bf70440#二、后端返回二进制文件流\",\"25\":\"v-2bf70440#_2-1-content-disposition\",\"26\":\"v-2bf70440#_2-2-content-disposition-中文件名中文乱码\",\"27\":\"v-2bf70440#_2-3-content-disposition-跨域\",\"28\":\"v-6878f74b\",\"29\":\"v-6878f74b#一、什么是-vue\",\"30\":\"v-6878f74b#二、理解-mvvm\",\"31\":\"v-6878f74b#三、安装-vue\",\"32\":\"v-4746fd3e\",\"33\":\"v-145598cf\",\"34\":\"v-9e837194\",\"35\":\"v-8bcc1b2a\",\"36\":\"v-7e25fb5f\",\"37\":\"v-0600f047\",\"38\":\"v-8bbac970\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[4,38],\"2\":[4,38],\"3\":[4,39],\"4\":[2],\"5\":[3,25],\"6\":[2,18],\"7\":[2,2],\"8\":[3,8],\"9\":[3,31],\"10\":[2,29],\"11\":[3,13],\"12\":[3,15],\"13\":[2,42],\"14\":[3,36],\"15\":[2,4],\"16\":[2,12],\"17\":[3,23],\"18\":[2,26],\"19\":[2,11],\"20\":[2],\"21\":[3,13],\"22\":[6,40],\"23\":[4,10],\"24\":[2,73],\"25\":[4,39],\"26\":[4,44],\"27\":[5,40],\"28\":[2],\"29\":[4,19],\"30\":[3,51],\"31\":[3,68],\"32\":[1],\"33\":[1],\"34\":[1],\"35\":[1],\"36\":[1],\"37\":[1],\"38\":[1]},\"averageFieldLength\":[2.6153846153846154,27.60595703125],\"storedFields\":{\"0\":{\"h\":\"001-SpringBoot简介\"},\"1\":{\"h\":\"一、SpringBoot 是什么 ？\",\"t\":[\"在介绍 SpringBoot 之前，先来简单介绍下 Spring。Spring 是诞生于 2002 年的 Java 开发框架，可以说已经成为 Java 开发的标准。\",\"Spring 的 AOP 和 IOC 极大的简化了 Java 的开发，一个大型的项目往往需要集成很多组件，使用 Spring 的话每集成一个组件都需要写它的配置文件，这是相当繁琐且容易出错的。\",\"SpringBoot 作为一个全新的框架应运而生，它是对 Spring 的进一步封装，其设计目的是用来简化 Spring 应用的初始搭建以及开发过程。\",\"关于 SpringBoot 有一句很出名的话就是约定大于配置。SpringBoot 集成了大量常用的第三方框架配置，例如 Redis、MongoDB、MyBatis 等。这些第三方库几乎可以零配置的开箱即用，使得开发者能够更加专注与业务逻辑。\"]},\"2\":{\"h\":\"二、为何会出现 SpringBoot ？\",\"t\":[\"SpringBoot 简化了 Spring 的开发，这只是最直观的一方面。事实上 SpringBoot 的诞生与它所处的大时代背景微服务密不可分。\",\"随着微服务开发的需求极具增加，如何方便、快捷的构建一个标准生产环境的 Spring 应用也是摆在开发者面前的一个难题，而 SpringBoot 框架的出现恰好完美地解决了这些问题，同时其内部还简化了许多常用的第三方库配置，使得微服务开发更加便利，这也间接体现了 SpringBoot 框架的优势和学习 SpringBoot 的必要性。\",\"微服务架构是⼀种架构模式，它提倡将单⼀应⽤程序划分成⼀组⼩的服务，服务之间互相协调、互相配合，为⽤户提供最终价值。每个服务运⾏在其独⽴的进程中，服务与服务间采⽤轻量级的通信机制互相协作（通常是基于HTTP协议的RESTful API）。每个服务都围绕着具体业务进⾏构建，并且能够被独⽴的部署到⽣产环境、类⽣产环境等。另外，应当尽量避免统⼀的、集中式的服务管理机制，对具体的⼀个服务⽽⾔，应根据业务上下⽂，选择合适的语⾔、⼯具对其进⾏构建。\"]},\"3\":{\"h\":\"三、SpringBoot 的开箱即用体现在那里？\",\"t\":[\"SpringBoot 的开箱即用一方面体现在约定优于配置的特性，也是实现自动装配的关键；另一方面是基于开箱即用的自动装配模块 SpringBoot Starter 技术实现的。\",\"SpringBoot Starter 将我们带入了一种“可插拔”的编程模式，我们只需要引入现成第三方框架的 Starter 依赖，并在代码中添加必要的注解，就可以获得对应的功能；同时还可以结合 SpringBoot 的自动装配机制，实现自定义的 Starter 组件，供第三方使用。\",\"从 Starter 的命名上可以区分出两类 Starter\",\"Spring 官方 Starter：命 名 应 遵 循 spring-boot-starter-{name} 的 格 式，如 spring-boot-starter-web\",\"非 Spring 官方 Starter：命 名 应 遵 循 {name}-spring-boot-starter 的格式，如 mybatis-spring-boot-starter\"]},\"4\":{\"h\":\"001-微服务与SpringCloud\"},\"5\":{\"h\":\"1-什么是微服务？\",\"t\":[\"微服务架构（Microservice Architecture）是一种架构理念，业界没有严格统一的定义，但是作为微服务这名词的发明人，Martin Fowler 对微服务的定义似乎更具有权威性和指导意义：\",\"简而言之，微服务架构的风格，就是将单一程序开发成一个个微服务， 每个微服务运行在自己的进程中，并使用轻量级通信机制，通常是 HTTP RESTFUL API 。这些服务围绕业务能力来划分构建的，并通 过完全自动化部署机制来独立部署这些服务可以使用不同的编程语 言，以及不同数据存储技术，以保证最低限度的集中式管理。\"]},\"6\":{\"h\":\"2-微服务需要解决的问题\",\"t\":[\"微服务架构风格是将单个应用程序开发为一套套小型服务，每个服务运行在自己的进程中，并通过轻量级通信机制进行通信。这些服务围绕业务功能构建，并通过全自动部署机制独立部署。同时做到对这些服务进行集中式的管理，但不同的服务可能是用不同的编程语言编写的，并使用不同的数据存储技术。\",\"如果说要构建一套符合微服务架构理念的系统，可能需要解决如下的问题：\",\"众多的服务，如何统一且有效地进行管理？\",\"如何解决各个服务之间的通信？\",\"如此多的服务，客户端如何访问？\",\"当出现了问题，如何再众多的服务中进行排查和处理？\"]},\"7\":{\"h\":\"3-微服务架构的相关概念\",\"t\":[\"下面是微服务架构针对需要解决的问题提出的一些相关概念。\"]},\"8\":{\"h\":\"3.1 服务治理\",\"t\":[\"服务治理就是通过注册中心进行服务的自动化管理，其核心是服务的注册与发现。其中服务实例将自身服务信息注册到注册中心就叫做服务注册，而服务实例通过注册中心获取到其中的实例的服务信息，并通过这些信息去请求相关服务的过程就是服务发现。此外，注册中心还应该具备剔除出现问题的服务的功能。\"]},\"9\":{\"h\":\"3.2 服务调用\",\"t\":[\"再在微服务架构中，通常存在多个服务之间的远程调用需求。目前主流的远程调用技术有基于 HTTP 请求的 RESTFul接口及基于 TCP 的 RPC 协议。\",\"REST(Representational State Transfer)：这是一种 HTTP 调用的格式，更标准，更通用，无论哪种语言都支持HTTP 协议。\",\"RPC（Remote Promote Call）：一种进程间通信方式。允许像调用本地服务一样调用远程服务。RPC 框架的主要目标就是让远程服务调用更简单、透明。RPC 框架负责屏蔽底层的传输方式、序列化方式和通信细节。开发人员在使用的时候只需要了解谁在什么位置提供了什么样的远程服务接口即可，并不需要关心底层通信细节和调用过程。\"]},\"10\":{\"h\":\"3.3 服务网关\",\"t\":[\"随着服务的不断增多，不同的服务一般会有不同的网络地址，而外部客户端可能需要调用多个服务的接口才能完成一个业务需求，如果让客户端直接与各个微服务通信可能会出现如下问题：\",\"客户端再不同的场景下需要调用不同的 URL 地址，为服务的调用增加了难度。\",\"在一定的场景下，可能会出现跨域请求的问题。\",\"每个服务都需要进行单独的身份认证。\",\"为了解决这些问题，API 网关应运而生。一个网关的基本功能有：统一接入、安全防护、协议适配、流量管控、长短链接支持、容错能力。有了网关之后，各个 API 服务提供团队可以专注于自己的的业务逻辑处理，而 API 网关更专注于安全、流量、路由等问题。\"]},\"11\":{\"h\":\"3.4 服务容错\",\"t\":[\"在微服务架构中，一个请求通常会涉及到调用几个服务，如果其中某个服务不可用，没有做服务容错的话，极有可能会造成一连串的服务不可用，这就是雪崩效应。\",\"虽然我们无法预防雪崩效应的发生，但我们应该尽可能地做好服务容错，服务容错的三个核心思想是：\",\"不被外界环境影响。\",\"不被上游请求压垮。\",\"不被下游请求拖垮。\"]},\"12\":{\"h\":\"3.5 链路追踪\",\"t\":[\"随着微服务架构的流行，服务按照不同的维度进行拆分，一次请求往往需要涉及到多个服务。互联网应用构建在不同的软件模块集上，这些软件模块，有可能是由不同的团队开发、可能使用不同的编程语言来实现、有可能布在了几千台服务器，横跨多个不同的数据中心。因此，就需要对一次请求涉及的多个服务链路进行日志记录。\",\"所谓链路追踪，就是对一次请求涉及的很多个服务链路进行日志记录、性能监控。\"]},\"13\":{\"h\":\"4-SpringCloud\",\"t\":[\"微服务仅仅是一种架构思想，而 SpringCloud 是微服务架构的一站式解决方案，基于 SpringBoot 风格的封装，屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、容易部署的分布式系统开发工具包。\",\"SpringCloud 并没有重复造轮子，而是对现有的技术进行封装和维护，包括 spring-cloud-config、spring-cloud-bus 等近 20 个子项目，其中包含了服务注册与发现、配置中心、服务网关、智能路由、负载均衡、断路器、监控跟踪、分布式消息队列等解决方案。\",\"SpringCloud 的组件以 Netflix 开源的组件为主，随着部分组件的停止维护，SpringCloud 也推出了一些替代的新组件，下图给出了 SpringCloud 的一些核心组件：\",\"1685883366667-3b848f38-7c99-4e45-9e9c-d8b39329b00f-16862783747342\"]},\"14\":{\"h\":\"5-SpringCloud Alibaba\",\"t\":[\"SpringCloud Alibaba 是阿里研发的一套微服务架构的落地技术方案，可以很好的兼容 SpringCloud。只需修改一些配置和注解，原生 SpringCloud 就可以接入到 SpringCloud Alibaba 中。此外，SpringCloud Alibaba 还提供了一些新组件，使得微服务架构有了更多的选择。\",\"下面是 SpringCloud Alibaba 提供的核心开源组件：\",\"Sentinel：把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。\",\"Nacos：一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。\",\"RocketMQ：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。\",\"Dubbo：Apache Dubbo 是一款高性能 Java RPC 框架。\",\"Seata：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。\"]},\"15\":{\"h\":\"001-修改浏览器滚动条样式\",\"t\":[\"浏览器自带的滚动条样式比较丑，有时也和系统整体的色调不搭配，通常的做法是修改浏览器滚动条的默认样式。\"]},\"16\":{\"h\":\"一、滚动条的组成\",\"t\":[\"通俗来讲，滚动条由三部分组成：一部分是可以滑动的部分，我们称它为滑块；另一部分是滚动条的轨道，也就是滑块的轨道，一般来说，为了美观，滑块的颜色要比轨道的颜色深一些。还有一部分是滚动条的箭头，用于控制滚动条的移动。\"]},\"17\":{\"h\":\"二、CSS 伪类\",\"t\":[\"目前我们可以通过 CSS伪类 来实现滚动条的样式修改，以下为修改滚动条样式用到的 CSS 伪类。\",\"::-webkit-scrollbar：整个滚动条。\",\"::-webkit-scrollbar-button：滚动条的上下箭头。\",\"::-webkit-scrollbar-thumb：滚动条上的滚动滑块。\",\"::-webkit-scrollbar-track：滚动条轨道。\",\"::-webkit-scrollbar-track-piece：滚动条没有滑块的轨道部分。\",\"::-webkit-scrollbar-corner ：当同时有垂直滚动条和水平滚动条时交汇的部分。\",\"当然这种方式还存在一定的兼容性问题，仅可在 webkit 内核的浏览器上生效。\"]},\"18\":{\"h\":\"三、修改\",\"t\":[\"1. 无滑道滚动条\",\"/* 整个滚动条 */ ::-webkit-scrollbar{ /* 对应纵向滚动条的宽度 */ width: 10px; height: 10px; /* 对应横向滚动条的宽度 */ background-color: transparent; } /* 滚动条上的滚动滑块 */ ::-webkit-scrollbar-track{ border-radius: 10px; background-color: transparent; } /* 滚动条轨道 */ ::-webkit-scrollbar-thumb{ border-radius: 10px; background-color: #c0c0c0; } \",\"2. 纯色系滚动条\",\"/* 整个滚动条 */ ::-webkit-scrollbar { /* 对应纵向滚动条的宽度 */ width: 10px; /* 对应横向滚动条的宽度 */ height: 10px; } /* 滚动条上的滚动滑块 */ ::-webkit-scrollbar-thumb { background-color: #49b1f5; border-radius: 32px; } /* 滚动条轨道 */ ::-webkit-scrollbar-track { background-color: #dbeffd; border-radius: 32px; } \"]},\"19\":{\"h\":\"001-前端实现文件下载\",\"t\":[\"前端下载文件通常会遇到这样两种情况\",\"后端直接返回文件的网络地址（一般用在静态文件上，比如图片以及各种音视频资源等）。\",\"后端返回的是文件的二进制流（一般用在动态文件上，比如根据前端选择，导出不同的统计结果 excel 等）。\"]},\"20\":{\"h\":\"一、后端返回下载地址\"},\"21\":{\"h\":\"1.1 location.herf\",\"t\":[\"location.href直接指向一个文件的话，浏览器会下载该文件，对于单文件下载没有什么问题，但是如果下载多文件，点击过快就会重置掉前面的请求。\",\"function download(url){ window.location.href = url } \"]},\"22\":{\"h\":\"1.2 动态添加 <a/> 标签\",\"t\":[\"在 <a/> 标签上添加 download 属性，就可以下载其 href 属性指定文件地址的文件。基于这种方式我们可以动态创建 <a/> 标签来实现文件的下载。\",\"function downloadLink(path) { // 创建 a 标签 const downloadHtml = document.createElement('a') // 添加 herf 属性 downloadHtml.href = path // 指定文件名，可以从文件路径中截取 downloadHtml.download = path.substring(path.lastIndexOf('/') + 1) // 将 a 标签挂载到 body 上 document.body.appendChild(downloadHtml) // 模拟点击 a 标签 downloadHtml.click() // 点击后移除 a 标签 document.body.removeChild(downloadHtml) } \"]},\"23\":{\"h\":\"1.3 window.open\",\"t\":[\"window.open 可以打开一个新窗口，虽然能通过这种方式下载文件，但是新的窗口不会关闭，明显体验上不好。\",\"function download(url){ window.open(url); } \"]},\"24\":{\"h\":\"二、后端返回二进制文件流\",\"t\":[\"对于后端返回下载地址的静态资源，使用上面任意一种方法都可以实现文件下载，但后端若是返回二进制文件流，则通常配合 axios 等异步请求工具来实现。\",\"发送请求时指定响应类型为 blob\",\"function download(path) { axios({ url: \\\"path\\\", method: 'GET', responseType: 'blob', headers: { token: '' } }).then(response => { console.log(response) }) } \",\"那么，怎么将二进制数据变成文件呢？\",\"通过 window.URL.createObjectURL 方法，生成对应二进制数据 blob 对象的 URL，然后通过动态添加 a 标签的方法，来实现下载文件。\",\"export function downloadBlob(response) { // 从 content-disposition 中获取文件名 const contentDisposition = response.headers['content-disposition'] // 解码 const fileName = decodeURIComponent(contentDisposition.substring(contentDisposition.indexOf(\\\"''\\\") + 2)) // 构造 Blob 对象 const blob = new Blob([response.data], { type: response.data.type }) // 创建下载连接 const href = window.URL.createObjectURL(blob) // 创建下载元素 const downloadElement = document.createElement('a') // 将下载连接和文件名挂载到下载元素上 downloadElement.href = href downloadElement.download = fileName document.body.appendChild(downloadElement) // 点击下载 downloadElement.click() // 下载完成移除元素 document.body.removeChild(downloadElement) // 释放blob window.URL.revokeObjectURL(href) } \"]},\"25\":{\"h\":\"2.1 Content-Disposition\",\"t\":[\"服务器向浏览器发送文件时，如果是浏览器支持的文件类型，一般会默认使用浏览器打开，比如txt、png等。如果需要提示用户保存，就要利用Content-Disposition进行处理。\",\"格式：\\\"Content-Disposition\\\": disposition-type;disposition-parm\",\"示例：response.setHeader(\\\"Content-Disposition\\\", \\\"attachment;filename=fileName.xlsx\\\")\",\"其中 disposition-type 可以是 attachment 或 inline，二者的区别如下：\",\"attachment：浏览器在打开的时候会提示保存还是打开，即使选择打开，也会使用相关联的程序，比如记事本打开，而不是 IE 直接打开。\",\"inline：浏览器在打开时，将文件内容直接显示在页面。\",\"disposition-parm 有多种取值，主要使用的是 filename-parm 用于指示浏览器即将下载的附件的文件名。\"]},\"26\":{\"h\":\"2.2 Content-Disposition 中文件名中文乱码\",\"t\":[\"RFC822 规定，header 中的文本信息只能使用 ASCII 码，所以在 Content-Disposition 中直接使用汉字是非法的。所以必须将中文文件名转换成 ASCLL 码，可以使用 java.net.URLEncoder.encode 对文件名进行编码。\",\"格式：URLEncoder.*encode*(fileName, StandardCharsets.UTF_8)\",\"上面的代码会返回指定中文文件名的 ASCLL 码串，但在 IE 浏览器下仍可能乱码，当中文文件名中存在空格时 URLEncoder 在转码时会将空格替换成 + 号，IE 会直接将 + 显示出来，解决办法也很简单：将转码后的 ASCLL 串中的 + 号替换成 %20，浏览器会将 %20 转换成空格输出。\",\"改造：URLEncoder.*encode*(fileName, StandardCharsets.UTF_8).replaceAll(\\\"\\\\\\\\+\\\", \\\"%20\\\")\"]},\"27\":{\"h\":\"2.3 Content-Disposition 跨域\",\"t\":[\"在前后端分离的项目中通常会使用 CORS 解决跨域，此时只会 \\\"暴露\\\" 一下六种简单响应头给外部\",\"Cache-Control\",\"Content-Language\",\"Content-Type\",\"Expires\",\"Last-Modified\",\"Pragma\",\"这里 \\\"暴露\\\"的含义是：既可以在 NetWork 中看到，也可以在客户端获取。而 Content-Disposition 并不在上面六个响应头中，就导致了客户 \\\"看到吃不到\\\"。\",\"Access-Control-Expose-Headers 就是控制响应头 \\\"暴露\\\" 的开关。对于需要让客户端访问的响应头不仅需要将其添加到 header 中，还需要在 Access-Control-Expose-Headers 里面列出来。\",\"格式：response.setHeader(\\\"Access-Control-Expose-Headers\\\", \\\"Content-Disposition\\\")\"]},\"28\":{\"h\":\"001-Vue的介绍与安装\"},\"29\":{\"h\":\"一、什么是 vue？\",\"t\":[\"Vue (发音为 /vjuː/，类似 view) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。\"]},\"30\":{\"h\":\"二、理解 MVVM\",\"t\":[\"MVVM 是 vue 实现数据驱动视图和双向数据绑定的核心原理。MVVM 是 Model View ViewModel 的缩写，它是一种基于前端开发的架构模式。\",\"Model：数据层，数据和业务逻辑都在 Model 层中定义。\",\"View：视图层，也就是用户界面，负责数据的展示。\",\"ViewModel：视图数据层， ViewModel 层通过双向数据绑定将 View 层和 Model 层连接了起来，使得 View 层和Model 层的同步工作完全是自动的。\",\"mvvm\",\"Model 和 View 并无直接关联，而是通过 ViewModel 这个桥梁来进行联系的，ViewModel 就是 View 与 Model 的连接器，View 与 Model 通过 ViewModel 实现双向绑定。 因此当 Model 中的数据改变时会触发 View 层的刷新，View 中由于用户交互操作而改变的数据也会在 Model 中同步。这种模式实现了 Model 和 View 的数据自动同步，因此开发者只需要专注对数据的维护操作即可，而不需要自己操作 dom。\",\"MVVM 模式简化了界面与业务的一览，解决了数据频繁更新，MVVM 在使用当中，利用双向数据绑定技术，使得 Model 变化时，ViewModel 会自动更新，从而 View 也会自动变化。\"]},\"31\":{\"h\":\"三、安装 vue\",\"t\":[\"参考官网：介绍 — Vue.js (vuejs.org)\",\"vue 是一个类似于 JQuery 的 JS 框架，如果想使用 vue ，只需要在当前页面导入 vue.js 文件即可。下面是一个最简单的 vue 项目。\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>首页</title> <!-- 开发环境版本，包含了有帮助的命令行警告 --> <script src=\\\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\\\"></script> </head> <body> <div id=\\\"app\\\"> <h1>{{ name }}</h1> </div> <script> //创建一个Vue对象 const app = new Vue({ //指定,该对象代表 <div id=\\\"app\\\">,也就是说,这个div中的所有内容,都被当前的app对象管理 el: \\\"#app\\\", //定义vue中的数据 data: { name: \\\"vue\\\" } }); </script> </body> </html> \"]},\"32\":{\"h\":\"Springboot\"},\"33\":{\"h\":\"Back\"},\"34\":{\"h\":\"Springcloud\"},\"35\":{\"h\":\"Css\"},\"36\":{\"h\":\"Front\"},\"37\":{\"h\":\"Js\"},\"38\":{\"h\":\"Vue\"}},\"dirtCount\":0,\"index\":[[\"定义vue中的数据\",{\"1\":{\"31\":1}}],[\"都被当前的app对象管理\",{\"1\":{\"31\":1}}],[\"都可以胜任\",{\"1\":{\"29\":1}}],[\"该对象代表\",{\"1\":{\"31\":1}}],[\"指定\",{\"1\":{\"31\":1}}],[\"指定文件名\",{\"1\":{\"22\":1}}],[\"包含了有帮助的命令行警告\",{\"1\":{\"31\":1}}],[\"包括\",{\"1\":{\"13\":1}}],[\"<div\",{\"1\":{\"31\":2}}],[\"<body>\",{\"1\":{\"31\":1}}],[\"<script>\",{\"1\":{\"31\":1}}],[\"<script\",{\"1\":{\"31\":1}}],[\"<title>首页<\",{\"1\":{\"31\":1}}],[\"<meta\",{\"1\":{\"31\":1}}],[\"<h1>\",{\"1\":{\"31\":1}}],[\"<head>\",{\"1\":{\"31\":1}}],[\"<html\",{\"1\":{\"31\":1}}],[\"<\",{\"1\":{\"31\":8}}],[\"<a\",{\"0\":{\"22\":1},\"1\":{\"22\":2}}],[\"项目\",{\"1\":{\"31\":1}}],[\"文件即可\",{\"1\":{\"31\":1}}],[\"只需要在当前页面导入\",{\"1\":{\"31\":1}}],[\"只需修改一些配置和注解\",{\"1\":{\"14\":1}}],[\"org\",{\"1\":{\"31\":1}}],[\"open\",{\"0\":{\"23\":1},\"1\":{\"23\":2}}],[\"jquery\",{\"1\":{\"31\":1}}],[\"jsdelivr\",{\"1\":{\"31\":1}}],[\"js\",{\"0\":{\"37\":1},\"1\":{\"31\":4}}],[\"javascript\",{\"1\":{\"29\":2}}],[\"java\",{\"1\":{\"1\":3,\"14\":1,\"26\":1}}],[\"介绍\",{\"1\":{\"31\":1}}],[\"参考官网\",{\"1\":{\"31\":1}}],[\"安装\",{\"0\":{\"31\":1}}],[\"安全防护\",{\"1\":{\"10\":1}}],[\"会自动更新\",{\"1\":{\"30\":1}}],[\"会直接将\",{\"1\":{\"26\":1}}],[\"变化时\",{\"1\":{\"30\":1}}],[\"利用双向数据绑定技术\",{\"1\":{\"30\":1}}],[\"模式简化了界面与业务的一览\",{\"1\":{\"30\":1}}],[\"模拟点击\",{\"1\":{\"22\":1}}],[\"与\",{\"1\":{\"30\":2}}],[\"层的刷新\",{\"1\":{\"30\":1}}],[\"层的同步工作完全是自动的\",{\"1\":{\"30\":1}}],[\"层连接了起来\",{\"1\":{\"30\":1}}],[\"层和model\",{\"1\":{\"30\":1}}],[\"层和\",{\"1\":{\"30\":1}}],[\"层通过双向数据绑定将\",{\"1\":{\"30\":1}}],[\"层中定义\",{\"1\":{\"30\":1}}],[\"视图数据层\",{\"1\":{\"30\":1}}],[\"视图层\",{\"1\":{\"30\":1}}],[\"负责数据的展示\",{\"1\":{\"30\":1}}],[\"负载均衡\",{\"1\":{\"13\":1}}],[\"数据和业务逻辑都在\",{\"1\":{\"30\":1}}],[\"数据层\",{\"1\":{\"30\":1}}],[\"实现双向绑定\",{\"1\":{\"30\":1}}],[\"实现数据驱动视图和双向数据绑定的核心原理\",{\"1\":{\"30\":1}}],[\"实现自定义的\",{\"1\":{\"3\":1}}],[\"理解\",{\"0\":{\"30\":1}}],[\"帮助你高效地开发用户界面\",{\"1\":{\"29\":1}}],[\"构建\",{\"1\":{\"29\":1}}],[\"构造\",{\"1\":{\"24\":1}}],[\"类似\",{\"1\":{\"29\":1}}],[\"类⽣产环境等\",{\"1\":{\"2\":1}}],[\"viewmodel\",{\"1\":{\"30\":7}}],[\"view\",{\"1\":{\"29\":1,\"30\":11}}],[\"vjuː\",{\"1\":{\"29\":1}}],[\"vuejs\",{\"1\":{\"31\":1}}],[\"vue\",{\"0\":{\"29\":1,\"31\":1,\"38\":1},\"1\":{\"29\":2,\"30\":1,\"31\":9}}],[\"vue的介绍与安装\",{\"0\":{\"28\":1}}],[\"发音为\",{\"1\":{\"29\":1}}],[\"发送请求时指定响应类型为\",{\"1\":{\"24\":1}}],[\"什么是\",{\"0\":{\"29\":1}}],[\"什么是微服务\",{\"0\":{\"5\":1}}],[\"里面列出来\",{\"1\":{\"27\":1}}],[\"看到吃不到\",{\"1\":{\"27\":1}}],[\"既可以在\",{\"1\":{\"27\":1}}],[\"暴露\",{\"1\":{\"27\":3}}],[\"此时只会\",{\"1\":{\"27\":1}}],[\"此外\",{\"1\":{\"8\":1,\"14\":1}}],[\"跨域\",{\"0\":{\"27\":1}}],[\"改造\",{\"1\":{\"26\":1}}],[\"转换成空格输出\",{\"1\":{\"26\":1}}],[\"串中的\",{\"1\":{\"26\":1}}],[\"解决了数据频繁更新\",{\"1\":{\"30\":1}}],[\"解决跨域\",{\"1\":{\"27\":1}}],[\"解决办法也很简单\",{\"1\":{\"26\":1}}],[\"解码\",{\"1\":{\"24\":1}}],[\"显示出来\",{\"1\":{\"26\":1}}],[\"号替换成\",{\"1\":{\"26\":1}}],[\"号\",{\"1\":{\"26\":1}}],[\"8\",{\"1\":{\"26\":2,\"31\":1}}],[\"utf\",{\"1\":{\"26\":2,\"31\":1}}],[\"urlencoder\",{\"1\":{\"26\":4}}],[\"url\",{\"1\":{\"10\":1,\"21\":2,\"23\":2,\"24\":5}}],[\"el\",{\"1\":{\"31\":1}}],[\"en\",{\"1\":{\"31\":1}}],[\"encode\",{\"1\":{\"26\":3}}],[\"expose\",{\"1\":{\"27\":3}}],[\"export\",{\"1\":{\"24\":1}}],[\"expires\",{\"1\":{\"27\":1}}],[\"excel\",{\"1\":{\"19\":1}}],[\"所以必须将中文文件名转换成\",{\"1\":{\"26\":1}}],[\"所以在\",{\"1\":{\"26\":1}}],[\"所谓链路追踪\",{\"1\":{\"12\":1}}],[\"码串\",{\"1\":{\"26\":1}}],[\"码\",{\"1\":{\"26\":2}}],[\"规定\",{\"1\":{\"26\":1}}],[\"用于指示浏览器即将下载的附件的文件名\",{\"1\":{\"25\":1}}],[\"用于控制滚动条的移动\",{\"1\":{\"16\":1}}],[\"主要使用的是\",{\"1\":{\"25\":1}}],[\"直接打开\",{\"1\":{\"25\":1}}],[\"即使选择打开\",{\"1\":{\"25\":1}}],[\"或\",{\"1\":{\"25\":1}}],[\"xlsx\",{\"1\":{\"25\":1}}],[\"示例\",{\"1\":{\"25\":1}}],[\"释放blob\",{\"1\":{\"24\":1}}],[\"id=\",{\"1\":{\"31\":2}}],[\"ie\",{\"1\":{\"25\":1,\"26\":2}}],[\"inline\",{\"1\":{\"25\":2}}],[\"indexof\",{\"1\":{\"24\":1}}],[\"ioc\",{\"1\":{\"1\":1}}],[\"来实现下载文件\",{\"1\":{\"24\":1}}],[\"来实现滚动条的样式修改\",{\"1\":{\"17\":1}}],[\"然后通过动态添加\",{\"1\":{\"24\":1}}],[\"生成对应二进制数据\",{\"1\":{\"24\":1}}],[\"方法\",{\"1\":{\"24\":1}}],[\"怎么将二进制数据变成文件呢\",{\"1\":{\"24\":1}}],[\"那么\",{\"1\":{\"24\":1}}],[\"get\",{\"1\":{\"24\":1}}],[\"则通常配合\",{\"1\":{\"24\":1}}],[\"明显体验上不好\",{\"1\":{\"23\":1}}],[\"虽然能通过这种方式下载文件\",{\"1\":{\"23\":1}}],[\"虽然我们无法预防雪崩效应的发生\",{\"1\":{\"11\":1}}],[\"点击下载\",{\"1\":{\"24\":1}}],[\"点击后移除\",{\"1\":{\"22\":1}}],[\"点击过快就会重置掉前面的请求\",{\"1\":{\"21\":1}}],[\"上面的代码会返回指定中文文件名的\",{\"1\":{\"26\":1}}],[\"上\",{\"1\":{\"22\":1}}],[\"将转码后的\",{\"1\":{\"26\":1}}],[\"将文件内容直接显示在页面\",{\"1\":{\"25\":1}}],[\"将下载连接和文件名挂载到下载元素上\",{\"1\":{\"24\":1}}],[\"将\",{\"1\":{\"22\":1}}],[\"将我们带入了一种\",{\"1\":{\"3\":1}}],[\"+\",{\"1\":{\"22\":1,\"24\":1,\"26\":4}}],[\"lang=\",{\"1\":{\"31\":1}}],[\"language\",{\"1\":{\"27\":1}}],[\"last\",{\"1\":{\"27\":1}}],[\"lastindexof\",{\"1\":{\"22\":1}}],[\"log\",{\"1\":{\"24\":1}}],[\"location\",{\"0\":{\"21\":1},\"1\":{\"21\":2}}],[\"添加\",{\"1\":{\"22\":1}}],[\"创建一个vue对象\",{\"1\":{\"31\":1}}],[\"创建下载元素\",{\"1\":{\"24\":1}}],[\"创建下载连接\",{\"1\":{\"24\":1}}],[\"创建\",{\"1\":{\"22\":1}}],[\"属性指定文件地址的文件\",{\"1\":{\"22\":1}}],[\"属性\",{\"1\":{\"22\":2}}],[\"标签的方法\",{\"1\":{\"24\":1}}],[\"标签挂载到\",{\"1\":{\"22\":1}}],[\"标签来实现文件的下载\",{\"1\":{\"22\":1}}],[\"标签上添加\",{\"1\":{\"22\":1}}],[\"标签\",{\"0\":{\"22\":1},\"1\":{\"22\":3}}],[\"><\",{\"1\":{\"31\":1}}],[\">\",{\"0\":{\"22\":1},\"1\":{\"22\":2,\"31\":5}}],[\"动态添加\",{\"0\":{\"22\":1}}],[\"=>\",{\"1\":{\"24\":1}}],[\"=\",{\"1\":{\"21\":1,\"22\":3,\"24\":7,\"31\":1}}],[\"front\",{\"0\":{\"36\":1}}],[\"filename=filename\",{\"1\":{\"25\":1}}],[\"filename\",{\"1\":{\"24\":2,\"25\":1,\"26\":2}}],[\"function\",{\"1\":{\"21\":1,\"22\":1,\"23\":1,\"24\":2}}],[\"fowler\",{\"1\":{\"5\":1}}],[\"浏览器会将\",{\"1\":{\"26\":1}}],[\"浏览器会下载该文件\",{\"1\":{\"21\":1}}],[\"浏览器下仍可能乱码\",{\"1\":{\"26\":1}}],[\"浏览器在打开时\",{\"1\":{\"25\":1}}],[\"浏览器在打开的时候会提示保存还是打开\",{\"1\":{\"25\":1}}],[\"浏览器自带的滚动条样式比较丑\",{\"1\":{\"15\":1}}],[\"导出不同的统计结果\",{\"1\":{\"19\":1}}],[\"比如记事本打开\",{\"1\":{\"25\":1}}],[\"比如txt\",{\"1\":{\"25\":1}}],[\"比如根据前端选择\",{\"1\":{\"19\":1}}],[\"比如图片以及各种音视频资源等\",{\"1\":{\"19\":1}}],[\"后端返回二进制文件流\",{\"0\":{\"24\":1}}],[\"后端返回下载地址\",{\"0\":{\"20\":1}}],[\"后端返回的是文件的二进制流\",{\"1\":{\"19\":1}}],[\"后端直接返回文件的网络地址\",{\"1\":{\"19\":1}}],[\"前端下载文件通常会遇到这样两种情况\",{\"1\":{\"19\":1}}],[\"前端实现文件下载\",{\"0\":{\"19\":1}}],[\"纯色系滚动条\",{\"1\":{\"18\":1}}],[\"h1>\",{\"1\":{\"31\":1}}],[\"html>\",{\"1\":{\"31\":2}}],[\"html\",{\"1\":{\"29\":1}}],[\"https\",{\"1\":{\"31\":1}}],[\"http\",{\"1\":{\"5\":1,\"9\":2}}],[\"href\",{\"1\":{\"21\":1,\"22\":2,\"24\":4}}],[\"href直接指向一个文件的话\",{\"1\":{\"21\":1}}],[\"head>\",{\"1\":{\"31\":1}}],[\"header\",{\"1\":{\"26\":1,\"27\":1}}],[\"headers\",{\"1\":{\"24\":2,\"27\":3}}],[\"herf\",{\"0\":{\"21\":1},\"1\":{\"22\":1}}],[\"height\",{\"1\":{\"18\":2}}],[\"window\",{\"0\":{\"23\":1},\"1\":{\"21\":1,\"23\":2,\"24\":3}}],[\"width\",{\"1\":{\"18\":2}}],[\"webkit\",{\"1\":{\"17\":7,\"18\":6}}],[\"web\",{\"1\":{\"3\":1}}],[\"无论是简单还是复杂的界面\",{\"1\":{\"29\":1}}],[\"无论哪种语言都支持http\",{\"1\":{\"9\":1}}],[\"无滑道滚动条\",{\"1\":{\"18\":1}}],[\"修改\",{\"0\":{\"18\":1}}],[\"修改浏览器滚动条样式\",{\"0\":{\"15\":1}}],[\"内核的浏览器上生效\",{\"1\":{\"17\":1}}],[\"仅可在\",{\"1\":{\"17\":1}}],[\"当中文文件名中存在空格时\",{\"1\":{\"26\":1}}],[\"当然这种方式还存在一定的兼容性问题\",{\"1\":{\"17\":1}}],[\"当同时有垂直滚动条和水平滚动条时交汇的部分\",{\"1\":{\"17\":1}}],[\"当出现了问题\",{\"1\":{\"6\":1}}],[\"pragma\",{\"1\":{\"27\":1}}],[\"promote\",{\"1\":{\"9\":1}}],[\"parm\",{\"1\":{\"25\":3}}],[\"path\",{\"1\":{\"22\":4,\"24\":2}}],[\"png等\",{\"1\":{\"25\":1}}],[\"piece\",{\"1\":{\"17\":1}}],[\"整个滚动条\",{\"1\":{\"17\":1,\"18\":2}}],[\"目前我们可以通过\",{\"1\":{\"17\":1}}],[\"目前主流的远程调用技术有基于\",{\"1\":{\"9\":1}}],[\"伪类\",{\"0\":{\"17\":1},\"1\":{\"17\":1}}],[\"还需要在\",{\"1\":{\"27\":1}}],[\"还有一部分是滚动条的箭头\",{\"1\":{\"16\":1}}],[\"还提供了一些新组件\",{\"1\":{\"14\":1}}],[\"滑块的颜色要比轨道的颜色深一些\",{\"1\":{\"16\":1}}],[\"我们称它为滑块\",{\"1\":{\"16\":1}}],[\"我们只需要引入现成第三方框架的\",{\"1\":{\"3\":1}}],[\"滚动条没有滑块的轨道部分\",{\"1\":{\"17\":1}}],[\"滚动条轨道\",{\"1\":{\"17\":1,\"18\":2}}],[\"滚动条上的滚动滑块\",{\"1\":{\"17\":1,\"18\":2}}],[\"滚动条的上下箭头\",{\"1\":{\"17\":1}}],[\"滚动条的组成\",{\"0\":{\"16\":1}}],[\"滚动条由三部分组成\",{\"1\":{\"16\":1}}],[\"通过\",{\"1\":{\"24\":1,\"30\":1}}],[\"通俗来讲\",{\"1\":{\"16\":1}}],[\"通常的做法是修改浏览器滚动条的默认样式\",{\"1\":{\"15\":1}}],[\"通常存在多个服务之间的远程调用需求\",{\"1\":{\"9\":1}}],[\"通常是\",{\"1\":{\"5\":1}}],[\"通常是基于http协议的restful\",{\"1\":{\"2\":1}}],[\"阿里巴巴开源产品\",{\"1\":{\"14\":1}}],[\"div>\",{\"1\":{\"31\":1}}],[\"dist\",{\"1\":{\"31\":1}}],[\"disposition进行处理\",{\"1\":{\"25\":1}}],[\"disposition\",{\"0\":{\"25\":1,\"26\":1,\"27\":1},\"1\":{\"24\":2,\"25\":6,\"26\":1,\"27\":2}}],[\"data\",{\"1\":{\"24\":2,\"31\":1}}],[\"decodeuricomponent\",{\"1\":{\"24\":1}}],[\"doctype\",{\"1\":{\"31\":1}}],[\"document\",{\"1\":{\"22\":3,\"24\":3}}],[\"dom\",{\"1\":{\"30\":1}}],[\"downloadelement\",{\"1\":{\"24\":6}}],[\"downloadblob\",{\"1\":{\"24\":1}}],[\"downloadhtml\",{\"1\":{\"22\":6}}],[\"downloadlink\",{\"1\":{\"22\":1}}],[\"download\",{\"1\":{\"21\":1,\"22\":2,\"23\":1,\"24\":2}}],[\"dbeffd\",{\"1\":{\"18\":1}}],[\"dubbo\",{\"1\":{\"14\":2}}],[\"d8b39329b00f\",{\"1\":{\"13\":1}}],[\"高可靠的消息发布与订阅服务\",{\"1\":{\"14\":1}}],[\"提供低延时的\",{\"1\":{\"14\":1}}],[\"提供的核心开源组件\",{\"1\":{\"14\":1}}],[\"配置管理和服务管理平台\",{\"1\":{\"14\":1}}],[\"配置中心\",{\"1\":{\"13\":1}}],[\"系统负载保护等多个维度保护服务的稳定性\",{\"1\":{\"14\":1}}],[\"熔断降级\",{\"1\":{\"14\":1}}],[\"把流量作为切入点\",{\"1\":{\"14\":1}}],[\"中同步\",{\"1\":{\"30\":1}}],[\"中由于用户交互操作而改变的数据也会在\",{\"1\":{\"30\":1}}],[\"中的数据改变时会触发\",{\"1\":{\"30\":1}}],[\"中的文本信息只能使用\",{\"1\":{\"26\":1}}],[\"中看到\",{\"1\":{\"27\":1}}],[\"中直接使用汉字是非法的\",{\"1\":{\"26\":1}}],[\"中文件名中文乱码\",{\"0\":{\"26\":1}}],[\"中获取文件名\",{\"1\":{\"24\":1}}],[\"中\",{\"1\":{\"14\":1,\"27\":1}}],[\"原生\",{\"1\":{\"14\":1}}],[\"9e9c\",{\"1\":{\"13\":1}}],[\"7c99\",{\"1\":{\"13\":1}}],[\"下载完成移除元素\",{\"1\":{\"24\":1}}],[\"下面是一个最简单的\",{\"1\":{\"31\":1}}],[\"下面是\",{\"1\":{\"14\":1}}],[\"下面是微服务架构针对需要解决的问题提出的一些相关概念\",{\"1\":{\"7\":1}}],[\"下图给出了\",{\"1\":{\"13\":1}}],[\"也会自动变化\",{\"1\":{\"30\":1}}],[\"也会使用相关联的程序\",{\"1\":{\"25\":1}}],[\"也就是说\",{\"1\":{\"31\":1}}],[\"也就是用户界面\",{\"1\":{\"30\":1}}],[\"也就是滑块的轨道\",{\"1\":{\"16\":1}}],[\"也可以在客户端获取\",{\"1\":{\"27\":1}}],[\"也推出了一些替代的新组件\",{\"1\":{\"13\":1}}],[\"也是实现自动装配的关键\",{\"1\":{\"3\":1}}],[\"开源的组件为主\",{\"1\":{\"13\":1}}],[\"开发环境版本\",{\"1\":{\"31\":1}}],[\"开发人员在使用的时候只需要了解谁在什么位置提供了什么样的远程服务接口即可\",{\"1\":{\"9\":1}}],[\"开发的标准\",{\"1\":{\"1\":1}}],[\"开发框架\",{\"1\":{\"1\":1}}],[\"npm\",{\"1\":{\"31\":1}}],[\"network\",{\"1\":{\"27\":1}}],[\"net\",{\"1\":{\"26\":1,\"31\":1}}],[\"netflix\",{\"1\":{\"13\":1}}],[\"new\",{\"1\":{\"24\":1,\"31\":1}}],[\"nacos\",{\"1\":{\"14\":1}}],[\"name\",{\"1\":{\"3\":2,\"31\":2}}],[\"分布式消息队列等解决方案\",{\"1\":{\"13\":1}}],[\"监控跟踪\",{\"1\":{\"13\":1}}],[\"断路器\",{\"1\":{\"13\":1}}],[\"智能路由\",{\"1\":{\"13\":1}}],[\"个子项目\",{\"1\":{\"13\":1}}],[\"back\",{\"0\":{\"33\":1}}],[\"background\",{\"1\":{\"18\":5}}],[\"blob\",{\"1\":{\"24\":7}}],[\"body>\",{\"1\":{\"31\":1}}],[\"body\",{\"1\":{\"22\":3,\"24\":2}}],[\"border\",{\"1\":{\"18\":4}}],[\"boot\",{\"1\":{\"3\":4}}],[\"button\",{\"1\":{\"17\":1}}],[\"bus\",{\"1\":{\"13\":1}}],[\"cdn\",{\"1\":{\"31\":1}}],[\"charset=\",{\"1\":{\"31\":1}}],[\"cache\",{\"1\":{\"27\":1}}],[\"call\",{\"1\":{\"9\":1}}],[\"createobjecturl\",{\"1\":{\"24\":2}}],[\"createelement\",{\"1\":{\"22\":1,\"24\":1}}],[\"click\",{\"1\":{\"22\":1,\"24\":1}}],[\"cloud\",{\"1\":{\"13\":2}}],[\"c0c0c0\",{\"1\":{\"18\":1}}],[\"cors\",{\"1\":{\"27\":1}}],[\"corner\",{\"1\":{\"17\":1}}],[\"control\",{\"1\":{\"27\":4}}],[\"contentdisposition\",{\"1\":{\"24\":3}}],[\"content\",{\"0\":{\"25\":1,\"26\":1,\"27\":1},\"1\":{\"24\":2,\"25\":2,\"26\":1,\"27\":4}}],[\"console\",{\"1\":{\"24\":1}}],[\"const\",{\"1\":{\"22\":1,\"24\":5,\"31\":1}}],[\"config\",{\"1\":{\"13\":1}}],[\"color\",{\"1\":{\"18\":5}}],[\"css伪类\",{\"1\":{\"17\":1}}],[\"css\",{\"0\":{\"17\":1,\"35\":1},\"1\":{\"17\":1,\"29\":1}}],[\"容易部署的分布式系统开发工具包\",{\"1\":{\"13\":1}}],[\"容错能力\",{\"1\":{\"10\":1}}],[\"最终给开发者留出了一套简单易懂\",{\"1\":{\"13\":1}}],[\"屏蔽掉了复杂的配置和实现原理\",{\"1\":{\"13\":1}}],[\"风格的封装\",{\"1\":{\"13\":1}}],[\"基于这种方式我们可以动态创建\",{\"1\":{\"22\":1}}],[\"基于高可用分布式集群技术\",{\"1\":{\"14\":1}}],[\"基于\",{\"1\":{\"13\":1}}],[\"性能监控\",{\"1\":{\"12\":1}}],[\"因此开发者只需要专注对数据的维护操作即可\",{\"1\":{\"30\":1}}],[\"因此当\",{\"1\":{\"30\":1}}],[\"因此\",{\"1\":{\"12\":1}}],[\"横跨多个不同的数据中心\",{\"1\":{\"12\":1}}],[\"互联网应用构建在不同的软件模块集上\",{\"1\":{\"12\":1}}],[\"互相配合\",{\"1\":{\"2\":1}}],[\"链路追踪\",{\"0\":{\"12\":1}}],[\"5\",{\"0\":{\"12\":1,\"14\":1}}],[\"不被下游请求拖垮\",{\"1\":{\"11\":1}}],[\"不被上游请求压垮\",{\"1\":{\"11\":1}}],[\"不被外界环境影响\",{\"1\":{\"11\":1}}],[\"不同的服务一般会有不同的网络地址\",{\"1\":{\"10\":1}}],[\"极有可能会造成一连串的服务不可用\",{\"1\":{\"11\":1}}],[\"极大的简化了\",{\"1\":{\"1\":1}}],[\"没有做服务容错的话\",{\"1\":{\"11\":1}}],[\"49b1f5\",{\"1\":{\"18\":1}}],[\"4e45\",{\"1\":{\"13\":1}}],[\"4\",{\"0\":{\"11\":1,\"13\":1}}],[\"路由等问题\",{\"1\":{\"10\":1}}],[\"流量\",{\"1\":{\"10\":1}}],[\"流量管控\",{\"1\":{\"10\":1}}],[\"网关更专注于安全\",{\"1\":{\"10\":1}}],[\"网关应运而生\",{\"1\":{\"10\":1}}],[\"各个\",{\"1\":{\"10\":1}}],[\"有多种取值\",{\"1\":{\"25\":1}}],[\"有时也和系统整体的色调不搭配\",{\"1\":{\"15\":1}}],[\"有可能布在了几千台服务器\",{\"1\":{\"12\":1}}],[\"有可能是由不同的团队开发\",{\"1\":{\"12\":1}}],[\"有了网关之后\",{\"1\":{\"10\":1}}],[\"有一句很出名的话就是约定大于配置\",{\"1\":{\"1\":1}}],[\"长短链接支持\",{\"1\":{\"10\":1}}],[\"统一接入\",{\"1\":{\"10\":1}}],[\"在使用当中\",{\"1\":{\"30\":1}}],[\"在前后端分离的项目中通常会使用\",{\"1\":{\"27\":1}}],[\"在转码时会将空格替换成\",{\"1\":{\"26\":1}}],[\"在\",{\"1\":{\"22\":1}}],[\"在微服务架构中\",{\"1\":{\"11\":1}}],[\"在一定的场景下\",{\"1\":{\"10\":1}}],[\"在介绍\",{\"1\":{\"1\":1}}],[\"地址\",{\"1\":{\"10\":1}}],[\"客户端再不同的场景下需要调用不同的\",{\"1\":{\"10\":1}}],[\"客户端如何访问\",{\"1\":{\"6\":1}}],[\"随着部分组件的停止维护\",{\"1\":{\"13\":1}}],[\"随着微服务架构的流行\",{\"1\":{\"12\":1}}],[\"随着微服务开发的需求极具增加\",{\"1\":{\"2\":1}}],[\"随着服务的不断增多\",{\"1\":{\"10\":1}}],[\"序列化方式和通信细节\",{\"1\":{\"9\":1}}],[\"框架\",{\"1\":{\"14\":1,\"29\":1,\"31\":1}}],[\"框架负责屏蔽底层的传输方式\",{\"1\":{\"9\":1}}],[\"框架的主要目标就是让远程服务调用更简单\",{\"1\":{\"9\":1}}],[\"框架的优势和学习\",{\"1\":{\"2\":1}}],[\"框架的出现恰好完美地解决了这些问题\",{\"1\":{\"2\":1}}],[\"透明\",{\"1\":{\"9\":1}}],[\"允许像调用本地服务一样调用远程服务\",{\"1\":{\"9\":1}}],[\"更通用\",{\"1\":{\"9\":1}}],[\"更标准\",{\"1\":{\"9\":1}}],[\"调用的格式\",{\"1\":{\"9\":1}}],[\"title>\",{\"1\":{\"31\":1}}],[\"type\",{\"1\":{\"24\":2,\"25\":2,\"27\":1}}],[\"then\",{\"1\":{\"24\":1}}],[\"thumb\",{\"1\":{\"17\":1,\"18\":2}}],[\"token\",{\"1\":{\"24\":1}}],[\"transparent\",{\"1\":{\"18\":2}}],[\"transfer\",{\"1\":{\"9\":1}}],[\"track\",{\"1\":{\"17\":2,\"18\":2}}],[\"tcp\",{\"1\":{\"9\":1}}],[\"协议适配\",{\"1\":{\"10\":1}}],[\"协议\",{\"1\":{\"9\":2}}],[\"rfc822\",{\"1\":{\"26\":1}}],[\"radius\",{\"1\":{\"18\":4}}],[\"rocketmq\",{\"1\":{\"14\":1}}],[\"rpc\",{\"1\":{\"9\":4,\"14\":1}}],[\"replaceall\",{\"1\":{\"26\":1}}],[\"representational\",{\"1\":{\"9\":1}}],[\"revokeobjecturl\",{\"1\":{\"24\":1}}],[\"response\",{\"1\":{\"24\":6,\"25\":1,\"27\":1}}],[\"responsetype\",{\"1\":{\"24\":1}}],[\"rest\",{\"1\":{\"9\":1}}],[\"restful接口及基于\",{\"1\":{\"9\":1}}],[\"restful\",{\"1\":{\"5\":1}}],[\"removechild\",{\"1\":{\"22\":1,\"24\":1}}],[\"remote\",{\"1\":{\"9\":1}}],[\"redis\",{\"1\":{\"1\":1}}],[\"请求的\",{\"1\":{\"9\":1}}],[\"再在微服务架构中\",{\"1\":{\"9\":1}}],[\"注册中心还应该具备剔除出现问题的服务的功能\",{\"1\":{\"8\":1}}],[\"其中\",{\"1\":{\"25\":1}}],[\"其中包含了服务注册与发现\",{\"1\":{\"13\":1}}],[\"其中服务实例将自身服务信息注册到注册中心就叫做服务注册\",{\"1\":{\"8\":1}}],[\"其核心是服务的注册与发现\",{\"1\":{\"8\":1}}],[\"其设计目的是用来简化\",{\"1\":{\"1\":1}}],[\"32px\",{\"1\":{\"18\":2}}],[\"3b848f38\",{\"1\":{\"13\":1}}],[\"3\",{\"0\":{\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":1,\"12\":1,\"23\":1,\"27\":1}}],[\"众多的服务\",{\"1\":{\"6\":1}}],[\"但在\",{\"1\":{\"26\":1}}],[\"但后端若是返回二进制文件流\",{\"1\":{\"24\":1}}],[\"但是新的窗口不会关闭\",{\"1\":{\"23\":1}}],[\"但是如果下载多文件\",{\"1\":{\"21\":1}}],[\"但是作为微服务这名词的发明人\",{\"1\":{\"5\":1}}],[\"但我们应该尽可能地做好服务容错\",{\"1\":{\"11\":1}}],[\"但不同的服务可能是用不同的编程语言编写的\",{\"1\":{\"6\":1}}],[\"20\",{\"1\":{\"13\":1,\"26\":3}}],[\"2002\",{\"1\":{\"1\":1}}],[\"2\",{\"0\":{\"6\":1,\"9\":1,\"22\":1,\"25\":1,\"26\":2,\"27\":1},\"1\":{\"18\":1,\"24\":1,\"31\":1}}],[\"以下为修改滚动条样式用到的\",{\"1\":{\"17\":1}}],[\"以保证最低限度的集中式管理\",{\"1\":{\"5\":1}}],[\"以及不同数据存储技术\",{\"1\":{\"5\":1}}],[\"言\",{\"1\":{\"5\":1}}],[\"过完全自动化部署机制来独立部署这些服务可以使用不同的编程语\",{\"1\":{\"5\":1}}],[\"每个微服务运行在自己的进程中\",{\"1\":{\"5\":1}}],[\"每个服务都需要进行单独的身份认证\",{\"1\":{\"10\":1}}],[\"每个服务都围绕着具体业务进⾏构建\",{\"1\":{\"2\":1}}],[\"每个服务运行在自己的进程中\",{\"1\":{\"6\":1}}],[\"每个服务运⾏在其独⽴的进程中\",{\"1\":{\"2\":1}}],[\"就导致了客户\",{\"1\":{\"27\":1}}],[\"就要利用content\",{\"1\":{\"25\":1}}],[\"就可以下载其\",{\"1\":{\"22\":1}}],[\"就可以接入到\",{\"1\":{\"14\":1}}],[\"就可以获得对应的功能\",{\"1\":{\"3\":1}}],[\"就是\",{\"1\":{\"30\":1}}],[\"就是控制响应头\",{\"1\":{\"27\":1}}],[\"就是对一次请求涉及的很多个服务链路进行日志记录\",{\"1\":{\"12\":1}}],[\"就是将单一程序开发成一个个微服务\",{\"1\":{\"5\":1}}],[\"就需要对一次请求涉及的多个服务链路进行日志记录\",{\"1\":{\"12\":1}}],[\"简而言之\",{\"1\":{\"5\":1}}],[\"简化了\",{\"1\":{\"2\":1}}],[\"对文件名进行编码\",{\"1\":{\"26\":1}}],[\"对象\",{\"1\":{\"24\":1}}],[\"对象的\",{\"1\":{\"24\":1}}],[\"对于需要让客户端访问的响应头不仅需要将其添加到\",{\"1\":{\"27\":1}}],[\"对于后端返回下载地址的静态资源\",{\"1\":{\"24\":1}}],[\"对于单文件下载没有什么问题\",{\"1\":{\"21\":1}}],[\"对应横向滚动条的宽度\",{\"1\":{\"18\":2}}],[\"对应纵向滚动条的宽度\",{\"1\":{\"18\":2}}],[\"对微服务的定义似乎更具有权威性和指导意义\",{\"1\":{\"5\":1}}],[\"对具体的⼀个服务⽽⾔\",{\"1\":{\"2\":1}}],[\"业界没有严格统一的定义\",{\"1\":{\"5\":1}}],[\"10px\",{\"1\":{\"18\":6}}],[\"16862783747342\",{\"1\":{\"13\":1}}],[\"1685883366667\",{\"1\":{\"13\":1}}],[\"1\",{\"0\":{\"5\":1,\"8\":1,\"21\":2,\"22\":1,\"23\":1,\"25\":1},\"1\":{\"18\":1,\"22\":1}}],[\"微服务仅仅是一种架构思想\",{\"1\":{\"13\":1}}],[\"微服务需要解决的问题\",{\"0\":{\"6\":1}}],[\"微服务架构的相关概念\",{\"0\":{\"7\":1}}],[\"微服务架构的风格\",{\"1\":{\"5\":1}}],[\"微服务架构风格是将单个应用程序开发为一套套小型服务\",{\"1\":{\"6\":1}}],[\"微服务架构\",{\"1\":{\"5\":1}}],[\"微服务架构是⼀种架构模式\",{\"1\":{\"2\":1}}],[\"微服务与springcloud\",{\"0\":{\"4\":1}}],[\"非\",{\"1\":{\"3\":1}}],[\"如果想使用\",{\"1\":{\"31\":1}}],[\"如果需要提示用户保存\",{\"1\":{\"25\":1}}],[\"如果是浏览器支持的文件类型\",{\"1\":{\"25\":1}}],[\"如果其中某个服务不可用\",{\"1\":{\"11\":1}}],[\"如果让客户端直接与各个微服务通信可能会出现如下问题\",{\"1\":{\"10\":1}}],[\"如果说要构建一套符合微服务架构理念的系统\",{\"1\":{\"6\":1}}],[\"如此多的服务\",{\"1\":{\"6\":1}}],[\"如何再众多的服务中进行排查和处理\",{\"1\":{\"6\":1}}],[\"如何解决各个服务之间的通信\",{\"1\":{\"6\":1}}],[\"如何统一且有效地进行管理\",{\"1\":{\"6\":1}}],[\"如何方便\",{\"1\":{\"2\":1}}],[\"如\",{\"1\":{\"3\":2}}],[\"式\",{\"1\":{\"3\":1}}],[\"格式\",{\"1\":{\"25\":1,\"26\":1,\"27\":1}}],[\"格\",{\"1\":{\"3\":1}}],[\"循\",{\"1\":{\"3\":2}}],[\"遵\",{\"1\":{\"3\":2}}],[\"名\",{\"1\":{\"3\":2}}],[\"命\",{\"1\":{\"3\":2}}],[\"官方\",{\"1\":{\"3\":2}}],[\"从而\",{\"1\":{\"30\":1}}],[\"从流量控制\",{\"1\":{\"14\":1}}],[\"从\",{\"1\":{\"3\":1,\"24\":1}}],[\"供第三方使用\",{\"1\":{\"3\":1}}],[\"组件化的编程模型\",{\"1\":{\"29\":1}}],[\"组件\",{\"1\":{\"3\":1}}],[\"同时做到对这些服务进行集中式的管理\",{\"1\":{\"6\":1}}],[\"同时还可以结合\",{\"1\":{\"3\":1}}],[\"同时其内部还简化了许多常用的第三方库配置\",{\"1\":{\"2\":1}}],[\"并无直接关联\",{\"1\":{\"30\":1}}],[\"并提供了一套声明式的\",{\"1\":{\"29\":1}}],[\"并不在上面六个响应头中\",{\"1\":{\"27\":1}}],[\"并不需要关心底层通信细节和调用过程\",{\"1\":{\"9\":1}}],[\"并没有重复造轮子\",{\"1\":{\"13\":1}}],[\"并使用不同的数据存储技术\",{\"1\":{\"6\":1}}],[\"并使用轻量级通信机制\",{\"1\":{\"5\":1}}],[\"并通过这些信息去请求相关服务的过程就是服务发现\",{\"1\":{\"8\":1}}],[\"并通过全自动部署机制独立部署\",{\"1\":{\"6\":1}}],[\"并通过轻量级通信机制进行通信\",{\"1\":{\"6\":1}}],[\"并通\",{\"1\":{\"5\":1}}],[\"并在代码中添加必要的注解\",{\"1\":{\"3\":1}}],[\"并且能够被独⽴的部署到⽣产环境\",{\"1\":{\"2\":1}}],[\"依赖\",{\"1\":{\"3\":1}}],[\"可以使用\",{\"1\":{\"26\":1}}],[\"可以是\",{\"1\":{\"25\":1}}],[\"可以打开一个新窗口\",{\"1\":{\"23\":1}}],[\"可以从文件路径中截取\",{\"1\":{\"22\":1}}],[\"可以很好的兼容\",{\"1\":{\"14\":1}}],[\"可以说已经成为\",{\"1\":{\"1\":1}}],[\"可能使用不同的编程语言来实现\",{\"1\":{\"12\":1}}],[\"可能会出现跨域请求的问题\",{\"1\":{\"10\":1}}],[\"可能需要解决如下的问题\",{\"1\":{\"6\":1}}],[\"可插拔\",{\"1\":{\"3\":1}}],[\"技术实现的\",{\"1\":{\"3\":1}}],[\"script>\",{\"1\":{\"31\":2}}],[\"scrollbar\",{\"1\":{\"17\":6,\"18\":6}}],[\"src=\",{\"1\":{\"31\":1}}],[\"substring\",{\"1\":{\"22\":1,\"24\":1}}],[\"setheader\",{\"1\":{\"25\":1,\"27\":1}}],[\"seata\",{\"1\":{\"14\":1}}],[\"sentinel\",{\"1\":{\"14\":1}}],[\"standardcharsets\",{\"1\":{\"26\":2}}],[\"state\",{\"1\":{\"9\":1}}],[\"starter\",{\"1\":{\"3\":12}}],[\"springcloud\",{\"0\":{\"13\":1,\"14\":1,\"34\":1},\"1\":{\"13\":5,\"14\":6}}],[\"spring\",{\"1\":{\"1\":6,\"2\":2,\"3\":6,\"13\":2}}],[\"springboot\",{\"0\":{\"1\":1,\"2\":1,\"3\":1,\"32\":1},\"1\":{\"1\":4,\"2\":5,\"3\":4,\"13\":1}}],[\"springboot简介\",{\"0\":{\"0\":1}}],[\"另一部分是滚动条的轨道\",{\"1\":{\"16\":1}}],[\"另一方面是基于开箱即用的自动装配模块\",{\"1\":{\"3\":1}}],[\"另外\",{\"1\":{\"2\":1}}],[\"三\",{\"0\":{\"3\":1,\"18\":1,\"31\":1}}],[\"⼯具对其进⾏构建\",{\"1\":{\"2\":1}}],[\"选择合适的语⾔\",{\"1\":{\"2\":1}}],[\"集中式的服务管理机制\",{\"1\":{\"2\":1}}],[\"集成了大量常用的第三方框架配置\",{\"1\":{\"1\":1}}],[\"应\",{\"1\":{\"3\":2}}],[\"应根据业务上下⽂\",{\"1\":{\"2\":1}}],[\"应当尽量避免统⼀的\",{\"1\":{\"2\":1}}],[\"应用也是摆在开发者面前的一个难题\",{\"1\":{\"2\":1}}],[\"应用的初始搭建以及开发过程\",{\"1\":{\"1\":1}}],[\"access\",{\"1\":{\"27\":3}}],[\"ascll\",{\"1\":{\"26\":3}}],[\"ascii\",{\"1\":{\"26\":1}}],[\"attachment\",{\"1\":{\"25\":3}}],[\"axios\",{\"1\":{\"24\":2}}],[\"a\",{\"1\":{\"22\":5,\"24\":2}}],[\"app\",{\"1\":{\"31\":4}}],[\"appendchild\",{\"1\":{\"22\":1,\"24\":1}}],[\"apache\",{\"1\":{\"14\":1}}],[\"api\",{\"1\":{\"2\":1,\"5\":1,\"10\":3}}],[\"alibaba\",{\"0\":{\"14\":1},\"1\":{\"14\":4}}],[\"architecture\",{\"1\":{\"5\":1}}],[\"aop\",{\"1\":{\"1\":1}}],[\"服务器向浏览器发送文件时\",{\"1\":{\"25\":1}}],[\"服务按照不同的维度进行拆分\",{\"1\":{\"12\":1}}],[\"服务容错的三个核心思想是\",{\"1\":{\"11\":1}}],[\"服务容错\",{\"0\":{\"11\":1}}],[\"服务提供团队可以专注于自己的的业务逻辑处理\",{\"1\":{\"10\":1}}],[\"服务网关\",{\"0\":{\"10\":1},\"1\":{\"13\":1}}],[\"服务调用\",{\"0\":{\"9\":1}}],[\"服务治理就是通过注册中心进行服务的自动化管理\",{\"1\":{\"8\":1}}],[\"服务治理\",{\"0\":{\"8\":1}}],[\"服务与服务间采⽤轻量级的通信机制互相协作\",{\"1\":{\"2\":1}}],[\"服务之间互相协调\",{\"1\":{\"2\":1}}],[\"为了美观\",{\"1\":{\"16\":1}}],[\"为了解决这些问题\",{\"1\":{\"10\":1}}],[\"为服务的调用增加了难度\",{\"1\":{\"10\":1}}],[\"为⽤户提供最终价值\",{\"1\":{\"2\":1}}],[\"为何会出现\",{\"0\":{\"2\":1}}],[\"它是一种基于前端开发的架构模式\",{\"1\":{\"30\":1}}],[\"它是对\",{\"1\":{\"1\":1}}],[\"它基于标准\",{\"1\":{\"29\":1}}],[\"它提倡将单⼀应⽤程序划分成⼀组⼩的服务\",{\"1\":{\"2\":1}}],[\"而不需要自己操作\",{\"1\":{\"30\":1}}],[\"而不是\",{\"1\":{\"25\":1}}],[\"而是通过\",{\"1\":{\"30\":1}}],[\"而是对现有的技术进行封装和维护\",{\"1\":{\"13\":1}}],[\"而外部客户端可能需要调用多个服务的接口才能完成一个业务需求\",{\"1\":{\"10\":1}}],[\"而服务实例通过注册中心获取到其中的实例的服务信息\",{\"1\":{\"8\":1}}],[\"而\",{\"1\":{\"2\":1,\"10\":1,\"13\":1,\"27\":1}}],[\"快捷的构建一个标准生产环境的\",{\"1\":{\"2\":1}}],[\"事实上\",{\"1\":{\"2\":1}}],[\"二者的区别如下\",{\"1\":{\"25\":1}}],[\"二\",{\"0\":{\"2\":1,\"17\":1,\"24\":1,\"30\":1}}],[\"使得\",{\"1\":{\"30\":2}}],[\"使得微服务架构有了更多的选择\",{\"1\":{\"14\":1}}],[\"使得微服务开发更加便利\",{\"1\":{\"2\":1}}],[\"使得开发者能够更加专注与业务逻辑\",{\"1\":{\"1\":1}}],[\"使用上面任意一种方法都可以实现文件下载\",{\"1\":{\"24\":1}}],[\"使用\",{\"1\":{\"1\":1}}],[\"这个div中的所有内容\",{\"1\":{\"31\":1}}],[\"这个桥梁来进行联系的\",{\"1\":{\"30\":1}}],[\"这种模式实现了\",{\"1\":{\"30\":1}}],[\"这里\",{\"1\":{\"27\":1}}],[\"这就是雪崩效应\",{\"1\":{\"11\":1}}],[\"这是一种\",{\"1\":{\"9\":1}}],[\"这是相当繁琐且容易出错的\",{\"1\":{\"1\":1}}],[\"这些软件模块\",{\"1\":{\"12\":1}}],[\"这些服务围绕业务功能构建\",{\"1\":{\"6\":1}}],[\"这些服务围绕业务能力来划分构建的\",{\"1\":{\"5\":1}}],[\"这些第三方库几乎可以零配置的开箱即用\",{\"1\":{\"1\":1}}],[\"这也间接体现了\",{\"1\":{\"2\":1}}],[\"这只是最直观的一方面\",{\"1\":{\"2\":1}}],[\"等异步请求工具来实现\",{\"1\":{\"24\":1}}],[\"等近\",{\"1\":{\"13\":1}}],[\"等\",{\"1\":{\"1\":1,\"19\":1}}],[\"mvvm\",{\"0\":{\"30\":1},\"1\":{\"30\":5}}],[\"model\",{\"1\":{\"30\":11}}],[\"modified\",{\"1\":{\"27\":1}}],[\"mongodb\",{\"1\":{\"1\":1}}],[\"method\",{\"1\":{\"24\":1}}],[\"martin\",{\"1\":{\"5\":1}}],[\"microservice\",{\"1\":{\"5\":1}}],[\"mybatis\",{\"1\":{\"1\":1,\"3\":1}}],[\"例如\",{\"1\":{\"1\":1}}],[\"关于\",{\"1\":{\"1\":1}}],[\"作为一个全新的框架应运而生\",{\"1\":{\"1\":1}}],[\"和\",{\"1\":{\"1\":1,\"29\":1,\"30\":2}}],[\"的数据自动同步\",{\"1\":{\"30\":1}}],[\"的连接器\",{\"1\":{\"30\":1}}],[\"的缩写\",{\"1\":{\"30\":1}}],[\"的含义是\",{\"1\":{\"27\":1}}],[\"的一些核心组件\",{\"1\":{\"13\":1}}],[\"的组件以\",{\"1\":{\"13\":1}}],[\"的格式\",{\"1\":{\"3\":1}}],[\"的命名上可以区分出两类\",{\"1\":{\"3\":1}}],[\"的自动装配机制\",{\"1\":{\"3\":1}}],[\"的编程模式\",{\"1\":{\"3\":1}}],[\"的开关\",{\"1\":{\"27\":1}}],[\"的开箱即用一方面体现在约定优于配置的特性\",{\"1\":{\"3\":1}}],[\"的开箱即用体现在那里\",{\"0\":{\"3\":1}}],[\"的开发\",{\"1\":{\"1\":1,\"2\":1}}],[\"的必要性\",{\"1\":{\"2\":1}}],[\"的诞生与它所处的大时代背景微服务密不可分\",{\"1\":{\"2\":1}}],[\"的进一步封装\",{\"1\":{\"1\":1}}],[\"的话每集成一个组件都需要写它的配置文件\",{\"1\":{\"1\":1}}],[\"的\",{\"1\":{\"1\":1,\"3\":1,\"9\":1,\"31\":1}}],[\"年的\",{\"1\":{\"1\":1}}],[\"是\",{\"1\":{\"30\":2}}],[\"是一个类似于\",{\"1\":{\"31\":1}}],[\"是一款用于构建用户界面的\",{\"1\":{\"29\":1}}],[\"是一款高性能\",{\"1\":{\"14\":1}}],[\"是一种架构理念\",{\"1\":{\"5\":1}}],[\"是阿里研发的一套微服务架构的落地技术方案\",{\"1\":{\"14\":1}}],[\"是微服务架构的一站式解决方案\",{\"1\":{\"13\":1}}],[\"是诞生于\",{\"1\":{\"1\":1}}],[\"是什么\",{\"0\":{\"1\":1}}],[\"先来简单介绍下\",{\"1\":{\"1\":1}}],[\"之前\",{\"1\":{\"1\":1}}],[\"一下六种简单响应头给外部\",{\"1\":{\"27\":1}}],[\"一般会默认使用浏览器打开\",{\"1\":{\"25\":1}}],[\"一般用在动态文件上\",{\"1\":{\"19\":1}}],[\"一般用在静态文件上\",{\"1\":{\"19\":1}}],[\"一般来说\",{\"1\":{\"16\":1}}],[\"一部分是可以滑动的部分\",{\"1\":{\"16\":1}}],[\"一款开源的分布式消息系统\",{\"1\":{\"14\":1}}],[\"一次请求往往需要涉及到多个服务\",{\"1\":{\"12\":1}}],[\"一个易于使用的高性能微服务分布式事务解决方案\",{\"1\":{\"14\":1}}],[\"一个更易于构建云原生应用的动态服务发现\",{\"1\":{\"14\":1}}],[\"一个请求通常会涉及到调用几个服务\",{\"1\":{\"11\":1}}],[\"一个网关的基本功能有\",{\"1\":{\"10\":1}}],[\"一个大型的项目往往需要集成很多组件\",{\"1\":{\"1\":1}}],[\"一种进程间通信方式\",{\"1\":{\"9\":1}}],[\"一\",{\"0\":{\"1\":1,\"16\":1,\"20\":1,\"29\":1}}],[\"001\",{\"0\":{\"0\":1,\"4\":1,\"15\":1,\"19\":1,\"28\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
