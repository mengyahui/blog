import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,a as l}from"./app-e35aecb2.js";const o={},p=l(`<h1 id="_001-前端实现文件下载" tabindex="-1"><a class="header-anchor" href="#_001-前端实现文件下载" aria-hidden="true">#</a> 001-前端实现文件下载</h1><p>前端下载文件通常会遇到这样两种情况</p><ol><li>后端直接返回文件的网络地址（一般用在静态文件上，比如图片以及各种音视频资源等）。</li><li>后端返回的是文件的二进制流（一般用在动态文件上，比如根据前端选择，导出不同的统计结果 excel 等）。</li></ol><h2 id="一、后端返回下载地址" tabindex="-1"><a class="header-anchor" href="#一、后端返回下载地址" aria-hidden="true">#</a> 一、后端返回下载地址</h2><h3 id="_1-1-location-herf" tabindex="-1"><a class="header-anchor" href="#_1-1-location-herf" aria-hidden="true">#</a> 1.1 location.herf</h3><p>location.href直接指向一个文件的话，浏览器会下载该文件，对于单文件下载没有什么问题，但是如果下载多文件，点击过快就会重置掉前面的请求。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">download</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#D4D4D4;">   </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">location</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">url</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-动态添加-a-标签" tabindex="-1"><a class="header-anchor" href="#_1-2-动态添加-a-标签" aria-hidden="true">#</a> 1.2 动态添加<code>&lt;a/&gt;</code>标签</h3><p>在 <code>&lt;a/&gt;</code> 标签上添加 <code>download</code> 属性，就可以下载其 <code>href</code> 属性指定文件地址的文件。基于这种方式我们可以动态创建 <code>&lt;a/&gt;</code> 标签来实现文件的下载。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">downloadLink</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 创建 a 标签</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">downloadHtml</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createElement</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 添加 herf 属性</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">downloadHtml</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">path</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 指定文件名，可以从文件路径中截取</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">downloadHtml</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">download</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">substring</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">lastIndexOf</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;/&#39;</span><span style="color:#D4D4D4;">) + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 将 a 标签挂载到 body 上</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">body</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">appendChild</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">downloadHtml</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 模拟点击 a 标签</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">downloadHtml</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">click</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 点击后移除 a 标签</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">body</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">removeChild</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">downloadHtml</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-window-open" tabindex="-1"><a class="header-anchor" href="#_1-3-window-open" aria-hidden="true">#</a> 1.3 window.open</h3><p>window.open 可以打开一个新窗口，虽然能通过这种方式下载文件，但是新的窗口不会关闭，明显体验上不好。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">download</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#D4D4D4;">   </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、后端返回二进制文件流" tabindex="-1"><a class="header-anchor" href="#二、后端返回二进制文件流" aria-hidden="true">#</a> 二、后端返回二进制文件流</h2><p>对于后端返回下载地址的静态资源，使用上面任意一种方法都可以实现文件下载，但后端若是返回二进制文件流，则通常配合 axios 等异步请求工具来实现。</p><p>发送请求时指定响应类型为 blob</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">download</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">axios</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">url:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;path&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">method:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;GET&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">responseType:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;blob&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">headers:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">token:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    })</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么，怎么将二进制数据变成文件呢？</p><p>通过 <code>window.URL.createObjectURL</code> 方法，生成对应二进制数据 <code>blob</code> 对象的 URL，然后通过动态添加 a 标签的方法，来实现下载文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">downloadBlob</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 从 content-disposition 中获取文件名</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">contentDisposition</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">headers</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">&#39;content-disposition&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 解码</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">fileName</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">decodeURIComponent</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">contentDisposition</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">substring</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">contentDisposition</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">indexOf</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&#39;&#39;&quot;</span><span style="color:#D4D4D4;">) + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 构造 Blob 对象</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">blob</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Blob</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">], { </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 创建下载连接</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">href</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#4FC1FF;">URL</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createObjectURL</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">blob</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 创建下载元素</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">downloadElement</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createElement</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 将下载连接和文件名挂载到下载元素上</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">downloadElement</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">href</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">downloadElement</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">download</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">fileName</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">body</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">appendChild</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">downloadElement</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 点击下载</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">downloadElement</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">click</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 下载完成移除元素</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">body</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">removeChild</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">downloadElement</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 释放blob</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#4FC1FF;">URL</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">revokeObjectURL</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-content-disposition" tabindex="-1"><a class="header-anchor" href="#_2-1-content-disposition" aria-hidden="true">#</a> 2.1 Content-Disposition</h3><p>服务器向浏览器发送文件时，如果是浏览器支持的文件类型，一般会默认使用浏览器打开，比如<code>txt</code>、<code>png</code>等。如果需要提示用户保存，就要利用<code>Content-Disposition</code>进行处理。</p><p><strong>格式</strong>：<code>&quot;Content-Disposition&quot;: disposition-type;disposition-parm</code></p><p><strong>示例</strong>：<code>response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=fileName.xlsx&quot;)</code></p><p>其中 disposition-type 可以是 attachment 或 inline，二者的区别如下：</p><ol><li><p>attachment：浏览器在打开的时候会提示保存还是打开，即使选择打开，也会使用相关联的程序，比如记事本打开，而不是 IE 直接打开。</p></li><li><p>inline：浏览器在打开时，将文件内容直接显示在页面。</p></li></ol><p>disposition-parm 有多种取值，主要使用的是 <code>filename-parm</code> 用于指示浏览器即将下载的附件的文件名。</p><h3 id="_2-2-content-disposition-中文件名中文乱码" tabindex="-1"><a class="header-anchor" href="#_2-2-content-disposition-中文件名中文乱码" aria-hidden="true">#</a> 2.2 Content-Disposition 中文件名中文乱码</h3><p>RFC822 规定，header 中的文本信息只能使用 ASCII 码，所以在 Content-Disposition 中直接使用汉字是非法的。所以必须将中文文件名转换成 ASCLL 码，可以使用 <code>java.net.URLEncoder.encode</code> 对文件名进行编码。</p><p><strong>格式</strong>：<code>URLEncoder.*encode*(fileName, StandardCharsets.UTF_8)</code></p><p>上面的代码会返回指定中文文件名的 ASCLL 码串，但在 IE 浏览器下仍可能乱码，当中文文件名中存在空格时 URLEncoder 在转码时会将空格替换成 + 号，IE 会直接将 + 显示出来，解决办法也很简单：将转码后的 ASCLL 串中的 + 号替换成 %20，浏览器会将 %20 转换成空格输出。</p><p><strong>改造</strong>：<code>URLEncoder.*encode*(fileName, StandardCharsets.UTF_8).replaceAll(&quot;\\\\+&quot;, &quot;%20&quot;)</code></p><h3 id="_2-3-content-disposition-跨域" tabindex="-1"><a class="header-anchor" href="#_2-3-content-disposition-跨域" aria-hidden="true">#</a> 2.3 Content-Disposition 跨域</h3><p>在前后端分离的项目中通常会使用 CORS 解决跨域，此时只会 &quot;暴露&quot; 一下六种简单响应头给外部</p><ul><li>Cache-Control</li><li>Content-Language</li><li>Content-Type</li><li>Expires</li><li>Last-Modified</li><li>Pragma</li></ul><p>这里 &quot;暴露&quot;的含义是：既可以在 NetWork 中看到，也可以在客户端获取。而 <code>Content-Disposition</code> 并不在上面六个响应头中，就导致了客户 &quot;看到吃不到&quot;。</p><p><code>Access-Control-Expose-Headers</code> 就是控制响应头 &quot;暴露&quot; 的开关。对于需要让客户端访问的响应头不仅需要将其添加到 header 中，还需要在 <code>Access-Control-Expose-Headers</code> 里面列出来。</p><p><strong>格式</strong>：<code>response.setHeader(&quot;Access-Control-Expose-Headers&quot;, &quot;Content-Disposition&quot;)</code></p>`,38),e=[p];function D(c,t){return n(),a("div",null,e)}const d=s(o,[["render",D],["__file","001-前端实现文件下载.html.vue"]]);export{d as default};
