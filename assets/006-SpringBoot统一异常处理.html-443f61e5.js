const e=JSON.parse('{"key":"v-63b3cbee","path":"/back/springboot/006-SpringBoot%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1-关于异常的理解","slug":"_1-关于异常的理解","link":"#_1-关于异常的理解","children":[]},{"level":2,"title":"2-SpringBoot默认异常处理机制","slug":"_2-springboot默认异常处理机制","link":"#_2-springboot默认异常处理机制","children":[]},{"level":2,"title":"3-统一异常处理","slug":"_3-统一异常处理","link":"#_3-统一异常处理","children":[{"level":3,"title":"3.1 @ExceptionHandler","slug":"_3-1-exceptionhandler","link":"#_3-1-exceptionhandler","children":[]},{"level":3,"title":"3.2 @ControllerAdvice","slug":"_3-2-controlleradvice","link":"#_3-2-controlleradvice","children":[]}]},{"level":2,"title":"4-全局异常处理器","slug":"_4-全局异常处理器","link":"#_4-全局异常处理器","children":[{"level":3,"title":"4.1 统一响应格式","slug":"_4-1-统一响应格式","link":"#_4-1-统一响应格式","children":[]},{"level":3,"title":"4.2 全局异常处理器","slug":"_4-2-全局异常处理器","link":"#_4-2-全局异常处理器","children":[]},{"level":3,"title":"4.3 自定义异常","slug":"_4-3-自定义异常","link":"#_4-3-自定义异常","children":[]}]},{"level":2,"title":"5-使用Assert替换throw Exception","slug":"_5-使用assert替换throw-exception","link":"#_5-使用assert替换throw-exception","children":[]}],"git":{"createdTime":1689841446000,"updatedTime":1689841446000,"contributors":[{"name":"deer","email":"2772540969@qq.com","commits":1}]},"readingTime":{"minutes":6.98,"words":2095},"filePathRelative":"back/springboot/006-SpringBoot统一异常处理.md","localizedDate":"2023年7月20日","excerpt":"<h2> 1-关于异常的理解</h2>\\n<p>首先应该明确一点，一切异常对于系统来说，都是不正常的表现。尽管有时由于业务处理的需要我们会主动抛出一些异常，但也不意味对这些异常可以不管不顾，需要有一个地方对抛出的异常进行处理。</p>\\n<p>在日常开发中，一个完善的异常处理机制，在提升系统稳定性和用户体验等方面是至关重要的。但我们不能认为完善异常处理机制是系统的核心，而是要反思系统架构设计是否合理、系统逻辑设计是否合理等。而不是指望完善异常处理来给系统缺陷擦屁股。</p>\\n<p>对异常按阶段进行分类，大体可以分成：进入<code>Controller</code>前的异常和 <code>Service</code> 层异常</p>"}');export{e as data};
