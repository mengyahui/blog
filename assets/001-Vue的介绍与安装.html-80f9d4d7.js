const e=JSON.parse('{"key":"v-6878f74b","path":"/front/vue/001-Vue%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%89%E8%A3%85.html","title":"001-Vue的介绍与安装","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、什么是 vue？","slug":"一、什么是-vue","link":"#一、什么是-vue","children":[]},{"level":2,"title":"二、理解 MVVM","slug":"二、理解-mvvm","link":"#二、理解-mvvm","children":[]},{"level":2,"title":"三、安装 vue","slug":"三、安装-vue","link":"#三、安装-vue","children":[]}],"git":{"createdTime":1688388067000,"updatedTime":1688388067000,"contributors":[{"name":"deer","email":"2772540969@qq.com","commits":1}]},"readingTime":{"minutes":1.99,"words":596},"filePathRelative":"front/vue/001-Vue的介绍与安装.md","localizedDate":"2023年7月3日","excerpt":"<h1> 001-Vue的介绍与安装</h1>\\n<h2> 一、什么是 vue？</h2>\\n<p>Vue (发音为 /vjuː/，类似 <strong>view</strong>) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。</p>\\n<h2> 二、理解 MVVM</h2>\\n<p>MVVM 是 vue 实现数据驱动视图和双向数据绑定的核心原理。MVVM 是 Model View ViewModel 的缩写，它是一种基于前端开发的架构模式。</p>"}');export{e as data};
