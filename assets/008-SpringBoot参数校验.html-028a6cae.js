const l=JSON.parse('{"key":"v-51d053f0","path":"/back/springboot/008-SpringBoot%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1-为什么要进行参数校验？","slug":"_1-为什么要进行参数校验","link":"#_1-为什么要进行参数校验","children":[]},{"level":2,"title":"2-Spring Validation","slug":"_2-spring-validation","link":"#_2-spring-validation","children":[]},{"level":2,"title":"3-常用校验注解","slug":"_3-常用校验注解","link":"#_3-常用校验注解","children":[]},{"level":2,"title":"4-异常说明","slug":"_4-异常说明","link":"#_4-异常说明","children":[]},{"level":2,"title":"5-异常处理","slug":"_5-异常处理","link":"#_5-异常处理","children":[]},{"level":2,"title":"6-@Validated&@Valid","slug":"_6-validated-valid","link":"#_6-validated-valid","children":[{"level":3,"title":"6.1 分组校验","slug":"_6-1-分组校验","link":"#_6-1-分组校验","children":[]},{"level":3,"title":"6.2 嵌套校验","slug":"_6-2-嵌套校验","link":"#_6-2-嵌套校验","children":[]}]}],"git":{"createdTime":1699098198000,"updatedTime":1699098198000,"contributors":[{"name":"deer","email":"2772540969@qq.com","commits":1}]},"readingTime":{"minutes":5.83,"words":1750},"filePathRelative":"back/springboot/008-SpringBoot参数校验.md","localizedDate":"2023年11月4日","excerpt":"<h2> 1-为什么要进行参数校验？</h2>\\n<p>通常来说，前端在发送请求时也会进行参数校验。但是为了避免用户绕过客户端，使用 HTTP 工具直接向后端请求一些违法数据，服务端的数据校验也是不能忽视的。</p>\\n<p>在日常的 Java 后端开发过程中，经常需要对接口的参数进行校验。例如，对于登录接口需要校验用户名和密码是否为空，添加用户时需要验证邮箱、手机号格式是否正确，若仅仅使用 <code>if...else</code> 对接口参数进行校验，不仅十分繁琐，而且代码可读性极差。</p>\\n<p>下面就来讲讲如何在 SpringBoot 项目中优雅的实现参数校验。</p>\\n<h2> 2-Spring Validation</h2>"}');export{l as data};
